// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package architecture_class is a generated GoMock package.
package architecture_class

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAccessor is a mock of Accessor interface
type MockAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockAccessorMockRecorder
}

// MockAccessorMockRecorder is the mock recorder for MockAccessor
type MockAccessorMockRecorder struct {
	mock *MockAccessor
}

// NewMockAccessor creates a new mock instance
func NewMockAccessor(ctrl *gomock.Controller) *MockAccessor {
	mock := &MockAccessor{ctrl: ctrl}
	mock.recorder = &MockAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccessor) EXPECT() *MockAccessorMockRecorder {
	return m.recorder
}

// Save mocks base method
func (m *MockAccessor) Save(arg0 int, arg1 Person) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Save", arg0, arg1)
}

// Save indicates an expected call of Save
func (mr *MockAccessorMockRecorder) Save(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockAccessor)(nil).Save), arg0, arg1)
}

// Retrieve mocks base method
func (m *MockAccessor) Retrieve(arg0 int) Person {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Retrieve", arg0)
	ret0, _ := ret[0].(Person)
	return ret0
}

// Retrieve indicates an expected call of Retrieve
func (mr *MockAccessorMockRecorder) Retrieve(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*MockAccessor)(nil).Retrieve), arg0)
}
